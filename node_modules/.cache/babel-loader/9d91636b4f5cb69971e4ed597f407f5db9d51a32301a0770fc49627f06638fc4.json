{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinde\\\\Desktop\\\\ahlam\\\\project-hind-soufiane\\\\newChat\\\\chathindchat\\\\src\\\\renewPassword\\\\RenewPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getAuth, onAuthStateChanged, fetchSignInMethodsForEmail, sendPasswordResetEmail } from 'firebase/auth';\nimport { auth } from '../firebase/Firebase';\nimport './Styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenewPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [signInMethods, setSignInMethods] = useState([]);\n  const [error, setError] = useState(null);\n  const {\n    getAuth,\n    getUserByEmail\n  } = require('firebase/auth');\n  const auth = getAuth();\n  const checkEmailExists = async () => {\n    try {\n      const userRecord = await getUserByEmail(auth, email);\n      if (userRecord) {\n        // User exists, log the UID\n        console.log('User UID:', userRecord.uid);\n      } else {\n        console.log('User with email does not exist.');\n      }\n    } catch (error) {\n      console.error('Error checking user by email:', error.message);\n    }\n\n    // Example usage\n    const userEmail = 'example@example.com';\n    checkUserByEmail(userEmail);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkEmailExists,\n        children: \"Check Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [signInMethods.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email exists. Sign-in methods: \", signInMethods.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email does not exist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n_s(RenewPassword, \"uieAdTp//M5djIQgHZ4iU6p7Dks=\");\n_c = RenewPassword;\nexport default RenewPassword;\nvar _c;\n$RefreshReg$(_c, \"RenewPassword\");","map":{"version":3,"names":["React","useEffect","useState","getAuth","onAuthStateChanged","fetchSignInMethodsForEmail","sendPasswordResetEmail","auth","jsxDEV","_jsxDEV","RenewPassword","_s","email","setEmail","signInMethods","setSignInMethods","error","setError","getUserByEmail","require","checkEmailExists","userRecord","console","log","uid","message","userEmail","checkUserByEmail","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","join","_c","$RefreshReg$"],"sources":["C:/Users/hinde/Desktop/ahlam/project-hind-soufiane/newChat/chathindchat/src/renewPassword/RenewPassword.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getAuth, onAuthStateChanged, fetchSignInMethodsForEmail, sendPasswordResetEmail } from 'firebase/auth';\r\nimport { auth } from '../firebase/Firebase';\r\n\r\nimport './Styles.css';\r\n\r\nfunction RenewPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [signInMethods, setSignInMethods] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const { getAuth, getUserByEmail } = require('firebase/auth');\r\n  const auth = getAuth();\r\n  const checkEmailExists = async () => {\r\n    \r\n      try {\r\n        const userRecord = await getUserByEmail(auth, email);\r\n        \r\n        if (userRecord) {\r\n          // User exists, log the UID\r\n          console.log('User UID:', userRecord.uid);\r\n        } else {\r\n          console.log('User with email does not exist.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking user by email:', error.message);\r\n      }\r\n    \r\n    \r\n    // Example usage\r\n    const userEmail = 'example@example.com';\r\n    checkUserByEmail(userEmail);\r\n    }\r\n  return (\r\n  <div>\r\n      <h2>Email Check</h2>\r\n      <div>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={checkEmailExists}>Check Email</button>\r\n      </div>\r\n      <div>\r\n        {signInMethods.length > 0 ? (\r\n          <p>Email exists. Sign-in methods: {signInMethods.join(', ')}</p>\r\n        ) : (\r\n          <p>Email does not exist.</p>\r\n        )}\r\n        {error && <p>Error: {error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenewPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}